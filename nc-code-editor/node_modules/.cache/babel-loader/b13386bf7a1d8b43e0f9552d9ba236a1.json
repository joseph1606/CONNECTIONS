{"ast":null,"code":"var _jsxFileName = \"/Users/walterosborne/Spring 2024/CMSC435/new_connections/nc-code-editor/src/components/CSV.js\";\nimport React, { useState } from 'react';\nimport './CSV.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction read() {\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    let lines = fr.result.split('\\r\\n');\n    lines.forEach(myFunction);\n\n    function myFunction(value, index, array) {\n      lines[index] = lines[index].split(',');\n    }\n\n    console.log(lines);\n    document.getElementById('header').textContent = lines[0];\n    document.getElementById('output').textContent = lines[1];\n  };\n\n  fr.readAsText(document.getElementById('csvreader').files[0]);\n}\n\nconst CSV = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"csvreader\",\n      type: \"file\",\n      accept: \".csv\",\n      onChange: read\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"header\",\n      color: \"green\",\n      children: \"Header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"output\",\n      children: \"Output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CSV;\nexport default CSV;\n\nvar _c;\n\n$RefreshReg$(_c, \"CSV\");","map":{"version":3,"names":["React","useState","read","fr","FileReader","onload","lines","result","split","forEach","myFunction","value","index","array","console","log","document","getElementById","textContent","readAsText","files","CSV"],"sources":["/Users/walterosborne/Spring 2024/CMSC435/new_connections/nc-code-editor/src/components/CSV.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './CSV.css'\n\nfunction read() {\n    var fr = new FileReader();\n    fr.onload = function () {\n        let lines = fr.result.split('\\r\\n')\n        lines.forEach(myFunction);\n\n        function myFunction(value, index, array) {\n            lines[index] = lines[index].split(',')\n        }\n        console.log(lines)\n        document.getElementById('header').textContent = lines[0];\n        document.getElementById('output').textContent = lines[1];\n    }\n    fr.readAsText(document.getElementById('csvreader').files[0]);\n}\n\n\nconst CSV = () => {\n    return (\n        <div>\n            <input id='csvreader' type=\"file\" accept=\".csv\" onChange={read} />\n            <h2 id='header' color='green'>Header</h2>\n            <p id='output'>Output</p>\n        </div>\n    )\n}\n\nexport default CSV  "],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;;;AAEA,SAASC,IAAT,GAAgB;EACZ,IAAIC,EAAE,GAAG,IAAIC,UAAJ,EAAT;;EACAD,EAAE,CAACE,MAAH,GAAY,YAAY;IACpB,IAAIC,KAAK,GAAGH,EAAE,CAACI,MAAH,CAAUC,KAAV,CAAgB,MAAhB,CAAZ;IACAF,KAAK,CAACG,OAAN,CAAcC,UAAd;;IAEA,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;MACrCP,KAAK,CAACM,KAAD,CAAL,GAAeN,KAAK,CAACM,KAAD,CAAL,CAAaJ,KAAb,CAAmB,GAAnB,CAAf;IACH;;IACDM,OAAO,CAACC,GAAR,CAAYT,KAAZ;IACAU,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,WAAlC,GAAgDZ,KAAK,CAAC,CAAD,CAArD;IACAU,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,WAAlC,GAAgDZ,KAAK,CAAC,CAAD,CAArD;EACH,CAVD;;EAWAH,EAAE,CAACgB,UAAH,CAAcH,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCG,KAArC,CAA2C,CAA3C,CAAd;AACH;;AAGD,MAAMC,GAAG,GAAG,MAAM;EACd,oBACI;IAAA,wBACI;MAAO,EAAE,EAAC,WAAV;MAAsB,IAAI,EAAC,MAA3B;MAAkC,MAAM,EAAC,MAAzC;MAAgD,QAAQ,EAAEnB;IAA1D;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAI,EAAE,EAAC,QAAP;MAAgB,KAAK,EAAC,OAAtB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAG,EAAE,EAAC,QAAN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CARD;;KAAMmB,G;AAUN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}