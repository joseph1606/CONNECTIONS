{"ast":null,"code":"var _jsxFileName = \"/Users/walterosborne/Spring 2024/CMSC435/new_connections/nc-code-editor/src/components/CSV.js\";\nimport React, { useState } from 'react';\nimport './REPL.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction read() {\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    let lines = fr.result.split('\\r');\n    lines.forEach(myFunction);\n\n    function myFunction(value, index, array) {\n      lines[index] = lines[index].split(',');\n    }\n\n    console.log(lines);\n    document.getElementById('output').textContent = lines;\n  };\n\n  fr.readAsText(document.getElementById('csvreader').files[0]);\n  /*let fr = new FileReader();\n  console.log(fr.result)\n  let lines = fr.result.split('\\n')\n  lines.forEach(myFunction);\n   function myFunction(value, index, array) {\n      lines[index] = lines[index].split(',')\n  }\n    fr.onload = function () {\n      document.getElementById('output')\n          .textContent = fr.result;\n  }\n   fr.readAsText(this.files[0]);*/\n}\n\nfunction hello() {\n  document.getElementById('csvreader').addEventListener('change', function () {\n    console.log('here');\n    console.log(this.files[0]);\n  });\n  console.log(document.getElementById('csvreader').files[0]);\n}\n\nconst CSV = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"csvreader\",\n      type: \"file\",\n      accept: \".csv\",\n      onChange: read\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"output\",\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CSV;\nexport default CSV;\n\nvar _c;\n\n$RefreshReg$(_c, \"CSV\");","map":{"version":3,"names":["React","useState","read","fr","FileReader","onload","lines","result","split","forEach","myFunction","value","index","array","console","log","document","getElementById","textContent","readAsText","files","hello","addEventListener","CSV"],"sources":["/Users/walterosborne/Spring 2024/CMSC435/new_connections/nc-code-editor/src/components/CSV.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './REPL.css'\n\nfunction read() {\n    var fr = new FileReader();\n    fr.onload = function () {\n        let lines = fr.result.split('\\r')\n        lines.forEach(myFunction);\n\n        function myFunction(value, index, array) {\n            lines[index] = lines[index].split(',')\n        }\n        console.log(lines)\n        document.getElementById('output').textContent = lines;\n    }\n    fr.readAsText(document.getElementById('csvreader').files[0]);\n\n    /*let fr = new FileReader();\n    console.log(fr.result)\n    let lines = fr.result.split('\\n')\n    lines.forEach(myFunction);\n\n    function myFunction(value, index, array) {\n        lines[index] = lines[index].split(',')\n    }\n\n\n    fr.onload = function () {\n        document.getElementById('output')\n            .textContent = fr.result;\n    }\n\n    fr.readAsText(this.files[0]);*/\n}\n\nfunction hello() {\n\n    document.getElementById('csvreader').addEventListener('change', function () {\n        console.log('here')\n        console.log(this.files[0])\n    })\n    console.log(document.getElementById('csvreader').files[0])\n}\n\nconst CSV = () => {\n    return (\n        <div>\n            <input id='csvreader' type=\"file\" accept=\".csv\" onChange={read} />\n            <p id='output'>Hello</p>\n        </div>\n    )\n}\n\nexport default CSV  "],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;;;AAEA,SAASC,IAAT,GAAgB;EACZ,IAAIC,EAAE,GAAG,IAAIC,UAAJ,EAAT;;EACAD,EAAE,CAACE,MAAH,GAAY,YAAY;IACpB,IAAIC,KAAK,GAAGH,EAAE,CAACI,MAAH,CAAUC,KAAV,CAAgB,IAAhB,CAAZ;IACAF,KAAK,CAACG,OAAN,CAAcC,UAAd;;IAEA,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,KAAlC,EAAyC;MACrCP,KAAK,CAACM,KAAD,CAAL,GAAeN,KAAK,CAACM,KAAD,CAAL,CAAaJ,KAAb,CAAmB,GAAnB,CAAf;IACH;;IACDM,OAAO,CAACC,GAAR,CAAYT,KAAZ;IACAU,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,WAAlC,GAAgDZ,KAAhD;EACH,CATD;;EAUAH,EAAE,CAACgB,UAAH,CAAcH,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCG,KAArC,CAA2C,CAA3C,CAAd;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKC;;AAED,SAASC,KAAT,GAAiB;EAEbL,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCK,gBAArC,CAAsD,QAAtD,EAAgE,YAAY;IACxER,OAAO,CAACC,GAAR,CAAY,MAAZ;IACAD,OAAO,CAACC,GAAR,CAAY,KAAKK,KAAL,CAAW,CAAX,CAAZ;EACH,CAHD;EAIAN,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCG,KAArC,CAA2C,CAA3C,CAAZ;AACH;;AAED,MAAMG,GAAG,GAAG,MAAM;EACd,oBACI;IAAA,wBACI;MAAO,EAAE,EAAC,WAAV;MAAsB,IAAI,EAAC,MAA3B;MAAkC,MAAM,EAAC,MAAzC;MAAgD,QAAQ,EAAErB;IAA1D;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAG,EAAE,EAAC,QAAN;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,CAPD;;KAAMqB,G;AASN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}